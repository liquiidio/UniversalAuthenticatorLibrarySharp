name: Deploy

on: [push]

jobs:
  split-canvas-upm:
    name: split upm branch
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: split upm_uitoolkit branch
      run: |
        git branch -d upm_uitoolkit &> /dev/null || echo upm branch not found # recreate the upm branch each time
        git config --global user.name 'github-bot'
        git config --global user.email 'github-bot@users.noreply.github.com'
        git checkout -b upm_uitoolkit                                            # checkout the branch
        git rm -r Examples/UiToolkit
        git rm -r Examples/UiToolKit.meta
        git rm -r .github
        git commit -am "removed workflow files"
        git push -u origin upm_uitoolkit --force                              # commit the branch
  
  split-uitoolkit-upm:
    name: split upm branch
    runs-on: ubuntu-latest
    needs: split-canvas-upm
    if: github.event_name == 'push'
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: split upm_canvas branch
      run: |
        git branch -d upm_canvas &> /dev/null || echo upm branch not found # recreate the upm branch each time
        git config --global user.name 'github-bot'
        git config --global user.email 'github-bot@users.noreply.github.com'
        git checkout -b upm_canvas                                            # checkout the branch
        git rm -r Examples/Canvas
        git rm -r Examples/Canvas.meta
        git rm -r .github
        git commit -am "removed workflow files"
        git push -u origin upm_canvas --force                              # commit the branch
  
  release:
    name: create github release
    runs-on: ubuntu-latest
    needs: split-uitoolkit-upm
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Determine version
        run: echo "VERSION=$(git describe --tags --dirty)" >> $GITHUB_ENV
      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.VERSION }}
          name: Release ${{ env.VERSION }}
          body: Git download link https://github.com/liquiidio/WombatUnityWebGl.git#upm



